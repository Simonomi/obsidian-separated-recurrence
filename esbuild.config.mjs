import esbuild from "esbuild";
import process from "process";
import builtins from 'builtin-modules';
import fs from "fs";

const banner =
`/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/
`;

const filesToCopy = {
	"/Users/simonomi/Library/Mobile Documents/iCloud~md~obsidian/Documents/main/.obsidian/plugins/obsidian-sr-two/main.js": "/Users/simonomi/Desktop/main.dupe"
};

for (const [source, destination] of Object.entries(filesToCopy)) {
	fs.copyFile(source, destination, (error) => {console.log(error)})
}

const prod = (process.argv[2] === 'production');

esbuild.build({
	banner: {
		js: banner,
	},
	entryPoints: ['main.ts'],
	bundle: true,
	external: [
		'obsidian',
		'electron',
		'@codemirror/autocomplete',
		'@codemirror/closebrackets',
		'@codemirror/collab',
		'@codemirror/commands',
		'@codemirror/comment',
		'@codemirror/fold',
		'@codemirror/gutter',
		'@codemirror/highlight',
		'@codemirror/history',
		'@codemirror/language',
		'@codemirror/lint',
		'@codemirror/matchbrackets',
		'@codemirror/panel',
		'@codemirror/rangeset',
		'@codemirror/rectangular-selection',
		'@codemirror/search',
		'@codemirror/state',
		'@codemirror/stream-parser',
		'@codemirror/text',
		'@codemirror/tooltip',
		'@codemirror/view',
		...builtins],
	format: 'cjs',
	watch: !prod,
	watch: {
		onRebuild(error, result) {
			for (const [source, destination] of Object.entries(filesToCopy)) {
				fs.copyFile(source, destination, (error) => {console.log(error)})
			}
		},
	},
	target: 'es2016',
	logLevel: "info",
	sourcemap: prod ? false : 'inline',
	treeShaking: true,
	outfile: 'main.js',
}).catch(() => process.exit(1));
